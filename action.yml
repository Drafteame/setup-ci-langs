name: 'custom-action-template'

description: ''

branding:
  icon: database
  color: blue

inputs:
  enable-all:
    description: 'Enable all'
    default: 'false'

  node:
    description: 'Enable NodeJS'
    default: 'false'
  node-working-directory:
    description: 'Node working directory'
    default: ''
  node-cache-key-suffix:
    description: 'Node cache key suffix'
    default: ''
  node-version:
    description: 'Node version'
    default: '20'

  go:
    description: 'Enable Golang'
    default: 'true'
  go-version:
    description: 'Go version'
    default: '1.22.x'

  python:
    description: 'Enable Python'
    default: 'false'
  python-version:
    description: 'Python version'
    default: '3.12.x'
  python-poetry-version:
    description: 'Poetry version'
    default: '1.8.3'

  pkl:
    description: 'Enable PKL'
    default: 'false'
  pkl-version:
    description: 'PKL version'
    default: '0.26.0'

runs:
  using: composite
  steps:
    - name: Setup Git and Pip and build-essential
      shell: bash
      run: |
        if ! [ -x "$(command -v git)" ]; then
          sudo apt-get update
          sudo apt-get install git -y
          sudo apt-get install python3-pip -y
          sudo apt-get install build-essential -y
        else
          echo "Git already installed..."
        fi

    - name: Setup Golang
      if: ${{ inputs.go == 'true' || inputs.enable-all == 'true'}}
      uses: magnetikonline/action-golang-cache@main
      with:
        go-version: ${{ inputs.go-version }}

    - name: Setup NodeJS with cache
      if: ${{ inputs.node == 'true' || inputs.enable-all == 'true'}}
      uses: Drafteame/node-cache-action@main
      with:
        node-version: ${{ inputs.node-version }}
        working-directory: ${{ inputs.node-working-directory }}
        cache-key-suffix: ${{ inputs.node-cache-key-suffix }}
    
    # POC
    - name: Install poetry
      if: ${{ inputs.python == 'true' || inputs.enable-all == 'true'}}
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ inputs.python-poetry-version }}


    - name: Add poetry to path 
      shell: bash
      if: ${{ inputs.python == 'true' || inputs.enable-all == 'true'}}
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        echo "PATH=$PATH" >> $GITHUB_ENV

    - name: Verify poetry.lock exists
      shell: bash
      run: |
        if [ ! -f "poetry.lock" ]; then
          sudo chmod +x $HOME/.local/bin/poetry
          echo "poetry.lock file not found"
          exit 1
        fi

    - if: ${{ inputs.python == 'true' || inputs.enable-all == 'true'}}
      uses: actions/setup-python@v5
      with:
        python-version:  ${{ inputs.python-version }}
        cache: 'poetry'


    - name: Setup PKL
      if: ${{ inputs.pkl == 'true' || inputs.enable-all == 'true'}}
      uses: Drafteame/setup-pkl-action@main
      with:
        version: ${{ inputs.pkl-version }}
